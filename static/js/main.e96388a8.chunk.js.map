{"version":3,"sources":["../../dist/index.js","../../dist/CircularProgressbar.js","AnimatedProgressbar.tsx","ChangingProgressbar.tsx","Demo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","CircularProgressbar_1","__webpack_require__","__extends","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","react_1","MIN_PERCENTAGE","MAX_PERCENTAGE","CENTER_X","CENTER_Y","CircularProgressbar","_super","props","_this","call","initialTimeout","undefined","requestAnimationFrame","state","percentage","initialAnimation","componentDidMount","window","setTimeout","setState","componentWillReceiveProps","nextProps","componentWillUnmount","clearTimeout","cancelAnimationFrame","getBackgroundPadding","background","backgroundPadding","strokeWidth","getPathRadius","render","_a","className","classes","counterClockwise","styles","text","circleRatio","pathRadius","createElement","root","style","viewBox","cx","cy","r","Path","trail","path","x","y","defaultProps","Component","assign","getDashStyle","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","min","max","strokeDasharray","strokeDashoffset","AnimatedProgressbar","isAnimated","_this2","react_default","a","es","start","update","timing","duration","ease","easingFunction","_ref","roundedPercentage","round","dist_default","concat","transition","React","ChangingProgressbar","currentPercentageIndex","setInterval","percentages","length","interval","classForPercentage","getCurrentPercentage","stylesForPercentage","textForPercentage","getClassName","getText","getStyles","githubURL","Code","classNames","Example","description","children","Demo","_React$useState","useState","_React$useState2","slicedToArray","showAllExamples","setShowAllExamples","src_ChangingProgressbar","stroke","Demo_Example","Demo_Code","fill","src_AnimatedProgressbar","easeQuadInOut","strokeLinecap","transform","transformOrigin","position","width","height","padding","src","alt","Fragment","onClick","href","App","src_Demo","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e96388a8.chunk.js","sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CircularProgressbar_1 = __importDefault(require(\"./CircularProgressbar\"));\n\nexports.default = CircularProgressbar_1.default;","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar MIN_PERCENTAGE = 0;\nvar MAX_PERCENTAGE = 100;\nvar MAX_X = 100;\nvar MAX_Y = 100;\nvar FULL_RADIUS = 50;\nvar CENTER_X = 50;\nvar CENTER_Y = 50;\n\nvar CircularProgressbar = function (_super) {\n  __extends(CircularProgressbar, _super);\n\n  function CircularProgressbar(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.initialTimeout = undefined;\n    _this.requestAnimationFrame = undefined;\n    _this.state = {\n      percentage: props.initialAnimation ? 0 : props.percentage\n    };\n    return _this;\n  }\n\n  CircularProgressbar.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.initialAnimation) {\n      this.initialTimeout = window.setTimeout(function () {\n        _this.requestAnimationFrame = window.requestAnimationFrame(function () {\n          _this.setState({\n            percentage: _this.props.percentage\n          });\n        });\n      }, 0);\n    }\n  };\n\n  CircularProgressbar.prototype.componentWillReceiveProps = function (nextProps) {\n    this.setState({\n      percentage: nextProps.percentage\n    });\n  };\n\n  CircularProgressbar.prototype.componentWillUnmount = function () {\n    clearTimeout(this.initialTimeout);\n\n    if (this.requestAnimationFrame) {\n      window.cancelAnimationFrame(this.requestAnimationFrame);\n    }\n  };\n\n  CircularProgressbar.prototype.getBackgroundPadding = function () {\n    if (this.props.background) {\n      if (this.props.backgroundPadding == null) {\n        return this.props.strokeWidth;\n      }\n\n      return this.props.backgroundPadding;\n    }\n\n    return 0;\n  };\n\n  CircularProgressbar.prototype.getPathRadius = function () {\n    return FULL_RADIUS - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  };\n\n  CircularProgressbar.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        classes = _a.classes,\n        counterClockwise = _a.counterClockwise,\n        percentage = _a.percentage,\n        styles = _a.styles,\n        strokeWidth = _a.strokeWidth,\n        text = _a.text,\n        circleRatio = _a.circleRatio;\n    var pathRadius = this.getPathRadius();\n    return react_1.default.createElement(\"svg\", {\n      className: classes.root + \" \" + className,\n      style: styles.root,\n      viewBox: \"0 0 \" + MAX_X + \" \" + MAX_Y\n    }, this.props.background ? react_1.default.createElement(\"circle\", {\n      className: classes.background,\n      style: styles.background,\n      cx: CENTER_X,\n      cy: CENTER_Y,\n      r: FULL_RADIUS\n    }) : null, react_1.default.createElement(Path, {\n      className: classes.trail,\n      counterClockwise: counterClockwise,\n      pathRadius: pathRadius,\n      percentage: 100 * circleRatio,\n      strokeWidth: strokeWidth,\n      style: styles.trail\n    }), react_1.default.createElement(Path, {\n      className: classes.path,\n      counterClockwise: counterClockwise,\n      pathRadius: pathRadius,\n      percentage: percentage * circleRatio,\n      strokeWidth: strokeWidth,\n      style: styles.path\n    }), text ? react_1.default.createElement(\"text\", {\n      className: classes.text,\n      style: styles.text,\n      x: CENTER_X,\n      y: CENTER_Y\n    }, text) : null);\n  };\n\n  CircularProgressbar.defaultProps = {\n    strokeWidth: 8,\n    className: '',\n    text: '',\n    background: false,\n    backgroundPadding: 0,\n    initialAnimation: false,\n    counterClockwise: false,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background'\n    },\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {}\n    }\n  };\n  return CircularProgressbar;\n}(react_1.default.Component);\n\nfunction Path(_a) {\n  var className = _a.className,\n      counterClockwise = _a.counterClockwise,\n      pathRadius = _a.pathRadius,\n      percentage = _a.percentage,\n      strokeWidth = _a.strokeWidth,\n      style = _a.style;\n  return react_1.default.createElement(\"path\", {\n    className: className,\n    style: Object.assign({}, style, getDashStyle({\n      pathRadius: pathRadius,\n      percentage: percentage,\n      counterClockwise: counterClockwise\n    })),\n    d: getPathDescription({\n      pathRadius: pathRadius,\n      counterClockwise: counterClockwise\n    }),\n    strokeWidth: strokeWidth,\n    fillOpacity: 0\n  });\n}\n\nfunction getPathDescription(_a) {\n  var pathRadius = _a.pathRadius,\n      counterClockwise = _a.counterClockwise;\n  var radius = pathRadius;\n  var rotation = counterClockwise ? 1 : 0;\n  return \"\\n      M \" + CENTER_X + \",\" + CENTER_Y + \"\\n      m 0,-\" + radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,\" + 2 * radius + \"\\n      a \" + radius + \",\" + radius + \" \" + rotation + \" 1 1 0,-\" + 2 * radius + \"\\n    \";\n}\n\nfunction getDashStyle(_a) {\n  var pathRadius = _a.pathRadius,\n      percentage = _a.percentage,\n      counterClockwise = _a.counterClockwise;\n  var diameter = Math.PI * 2 * pathRadius;\n  var truncatedPercentage = Math.min(Math.max(percentage, MIN_PERCENTAGE), MAX_PERCENTAGE);\n  var gapLength = (1 - truncatedPercentage / 100) * diameter;\n  return {\n    strokeDasharray: diameter + \"px \" + diameter + \"px\",\n    strokeDashoffset: (counterClockwise ? -gapLength : gapLength) + \"px\"\n  };\n}\n\nexports.default = CircularProgressbar;","import React from 'react';\nimport { Animate } from 'react-move';\nimport CircularProgressbar from 'react-circular-progressbar';\n\ntype Props = {\n  duration: number;\n  easingFunction: Function;\n  percentage: number;\n};\n\ntype State = {\n  isAnimated: boolean;\n};\n\nclass AnimatedProgressbar extends React.Component<Props, State> {\n  state = {\n    isAnimated: false,\n  };\n\n  componentDidMount() {\n    this.setState({\n      isAnimated: true,\n    });\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          percentage: 0,\n        })}\n        update={() => ({\n          percentage: [this.state.isAnimated ? this.props.percentage : 0],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction,\n          },\n        })}\n      >\n        {({ percentage }) => {\n          const roundedPercentage = Math.round(percentage);\n          return (\n            <CircularProgressbar\n              percentage={roundedPercentage}\n              text={`${roundedPercentage}%`}\n              styles={{\n                path: {\n                  transition: 'none',\n                },\n              }}\n            />\n          );\n        }}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressbar;\n","import React from 'react';\nimport CircularProgressbar from 'react-circular-progressbar';\n\ntype CircularProgressbarProps = {\n  counterClockwise?: boolean;\n  strokeWidth?: number;\n};\n\ntype Props = CircularProgressbarProps &\n  typeof ChangingProgressbar.defaultProps & {\n    percentages: number[];\n    classForPercentage?: (percentage: number) => string;\n    stylesForPercentage?: (percentage: number) => {};\n    textForPercentage?: (percentage: number) => string;\n  };\n\ntype State = {\n  currentPercentageIndex: number;\n};\n\nclass ChangingProgressbar extends React.Component<Props, State> {\n  static defaultProps = {\n    interval: 1000,\n    classForPercentage: (percentage: number) => '',\n    stylesForPercentage: (percentage: number) => ({}),\n    textForPercentage: (percentage: number) => `${percentage}%`,\n  };\n\n  state = {\n    currentPercentageIndex: 0,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        currentPercentageIndex:\n          (this.state.currentPercentageIndex + 1) % this.props.percentages.length,\n      });\n    }, this.props.interval);\n  }\n\n  getCurrentPercentage() {\n    return this.props.percentages[this.state.currentPercentageIndex];\n  }\n\n  getClassName() {\n    return this.props.classForPercentage(this.getCurrentPercentage());\n  }\n\n  getStyles() {\n    return this.props.stylesForPercentage(this.getCurrentPercentage());\n  }\n\n  getText() {\n    return this.props.textForPercentage(this.getCurrentPercentage());\n  }\n\n  render() {\n    return (\n      <CircularProgressbar\n        {...this.props}\n        className={this.getClassName()}\n        percentage={this.getCurrentPercentage()}\n        text={this.getText()}\n        styles={this.getStyles()}\n      />\n    );\n  }\n}\n\nexport default ChangingProgressbar;\n","import React from 'react';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport classNames from 'classnames';\nimport { easeSinOut, easeQuadIn, easeQuadInOut, easeLinear, easeCubicInOut } from 'd3-ease';\n\n// Custom progressbar wrappers\nimport AnimatedProgressbar from './AnimatedProgressbar';\nimport ChangingProgressbar from './ChangingProgressbar';\n\nconst githubURL = 'https://github.com/kevinsqi/react-circular-progressbar';\n\nconst Code: React.FunctionComponent<React.HTMLProps<HTMLSpanElement>> = (props) => (\n  <code className={classNames('p-1 bg-yellow text-dark', props.className)} {...props} />\n);\n\nconst Example: React.FunctionComponent<{ description: React.ReactNode }> = ({\n  description,\n  children,\n}) => (\n  <div className=\"col-12 col-sm-6 col-md-4 mt-5\">\n    <div className=\"row\">\n      <div className=\"col-6 col-md-4 offset-3 offset-md-4\">{children}</div>\n    </div>\n    <p className=\"text-center mt-3\">{description}</p>\n  </div>\n);\n\nfunction Demo() {\n  const [showAllExamples, setShowAllExamples] = React.useState(false);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-5\">\n        <div className=\"col-12\">\n          <div className=\"text-center\">\n            <h1 className=\"mb-3\">react-circular-progressbar</h1>\n            <p>A circular progress indicator component</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mt-5 mb-5\">\n        <div className=\"col-6 offset-3 col-md-2 offset-md-5\">\n          <ChangingProgressbar\n            percentages={[0, 20, 40, 60, 80, 100]}\n            stylesForPercentage={(percentage: number) => {\n              const alpha = (100 + percentage) / 200;\n              return {\n                path: {\n                  stroke: `rgba(62, 152, 199, ${alpha})`,\n                },\n              };\n            }}\n          />\n        </div>\n      </div>\n\n      <hr />\n      <div className=\"row mt-5\">\n        <div className=\"col-12\">\n          <h2 className=\"text-center\">Built with SVG and styled with plain CSS.</h2>\n        </div>\n\n        <Example\n          description={\n            <span>\n              Customize <Code>props.text</Code> and <Code>props.className</Code> based on\n              percentage.\n            </span>\n          }\n        >\n          <ChangingProgressbar\n            percentages={[75, 100]}\n            classForPercentage={(percentage: number) => {\n              return percentage === 100 ? 'complete' : 'incomplete';\n            }}\n            textForPercentage={(percentage: number) => {\n              return percentage === 100 ? `${percentage}!!` : `${percentage}...`;\n            }}\n          />\n        </Example>\n\n        <Example\n          description={\n            <span>\n              Customize <Code>props.strokeWidth</Code> and make it go counterclockwise with{' '}\n              <Code>props.counterClockwise</Code>.\n            </span>\n          }\n        >\n          <ChangingProgressbar percentages={[0, 80]} strokeWidth={5} counterClockwise />\n        </Example>\n\n        <Example\n          description={\n            <span>\n              Use <Code>props.background</Code> to give it an inverted style.\n            </span>\n          }\n        >\n          <CircularProgressbar\n            className=\"CircularProgressbar-inverted\"\n            background\n            backgroundPadding={5}\n            strokeWidth={6}\n            percentage={66}\n            text={`${66}%`}\n            classes={{\n              root: 'CircularProgressbar',\n              trail: 'CircularProgressbar-trail',\n              path: 'CircularProgressbar-path',\n              text: 'CircularProgressbar-text some-additional-test-class',\n              background: 'CircularProgressbar-background',\n            }}\n            styles={{\n              background: {\n                fill: '#3e98c7',\n              },\n            }}\n          />\n        </Example>\n\n        <Example\n          description={\n            <span>\n              Use a library like react-move to ease <Code>props.percentage</Code> if you want to\n              animate text.\n            </span>\n          }\n        >\n          <AnimatedProgressbar percentage={66} duration={1.4} easingFunction={easeQuadInOut} />\n        </Example>\n\n        <Example\n          description={\n            <span>\n              \"Give me that car speedometer look?\" Use <Code>props.circleRatio</Code> and CSS\n              rotation.\n            </span>\n          }\n        >\n          <CircularProgressbar\n            percentage={66}\n            text={`${66}%`}\n            circleRatio={0.75}\n            styles={{\n              trail: {\n                strokeLinecap: 'butt',\n                transform: 'rotate(-135deg)',\n                transformOrigin: 'center center',\n              },\n              path: {\n                strokeLinecap: 'butt',\n                transform: 'rotate(-135deg)',\n                transformOrigin: 'center center',\n              },\n            }}\n          />\n        </Example>\n\n        <Example description=\"Need multiple lines of text or custom content? With a bit of CSS you can do whatever you want.\">\n          <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n            <div style={{ position: 'absolute', width: '100%' }}>\n              <CircularProgressbar percentage={66} />\n            </div>\n            <div style={{ width: '100%', padding: '20%' }}>\n              <img style={{ width: '100%' }} src=\"https://i.imgur.com/b9NyUGm.png\" alt=\"doge\" />\n            </div>\n          </div>\n        </Example>\n\n        {showAllExamples ? (\n          <React.Fragment>\n            <Example\n              description={\n                <span>\n                  <Code>circleRatio</Code>&nbsp;\n                  <Code>counterClockwise</Code>&nbsp;\n                  <Code>background</Code>\n                </span>\n              }\n            >\n              <CircularProgressbar\n                percentage={50}\n                circleRatio={0.7}\n                counterClockwise\n                background\n                backgroundPadding={4}\n                styles={{\n                  trail: {\n                    stroke: '#fff',\n                  },\n                }}\n              />\n            </Example>\n          </React.Fragment>\n        ) : (\n          <div className=\"col-12 text-center\">\n            <button\n              className=\"btn btn-link text-secondary\"\n              onClick={() => setShowAllExamples(true)}\n            >\n              <small>Show more examples</small>\n            </button>\n          </div>\n        )}\n      </div>\n\n      <hr />\n      <div className=\"mt-5 mb-5\">\n        <h2 className=\"text-center\">Installation</h2>\n        <div className=\"text-center mt-5\">\n          <p>Install with yarn or npm:</p>\n          <p className=\"mb-5\">\n            <Code>yarn add react-circular-progressbar</Code>\n          </p>\n          <a className=\"btn btn-info btn-lg\" href={githubURL}>\n            View docs on Github\n          </a>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"mt-5\">\n            Built by <a href=\"https://www.kevinqi.com/\">@kevinsqi</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Demo;\n","import React, { Component } from 'react';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport Demo from './Demo';\n\n// Stylesheets\nimport 'react-circular-progressbar/dist/styles.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Demo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}